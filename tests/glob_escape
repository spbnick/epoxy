#!/bin/bash
#
# bt_glob_escape test suite
#
# Copyright (c) 2012 Red Hat, Inc. All rights reserved.
#
# This copyrighted material is made available to anyone wishing
# to use, modify, copy, or redistribute it subject to the terms
# and conditions of the GNU General Public License version 2.

. bt.sh
bt_suite_init

function at()
{
    declare -r input="$1"
    declare -r expected_output="$2"
    bt_test_begin "$input"; (
        bt_test_init
        declare -r output=`bt_glob_escape "\$input"`
        [ "$output" == "$expected_output" ]
    ); bt_test_end
}

function asi()
{
    declare -r input="$1"
    declare -r expected_output="$2"
    bt_test_begin "$input"; (
        bt_test_init
        declare -r output=`bt_glob_escape --set-item "\$input"`
        [ "$output" == "$expected_output" ]
    ); bt_test_end
}

bt_suite_begin no_args; (
    bt_suite_init
    bt_test -e 1 status eval "bt_glob_escape >/dev/null 2>&1"
    bt_test -e 1 stdout \
                    eval "bt_glob_escape 2>/dev/null | { ! grep -q .; }"
    bt_test -e 1 stderr \
                    eval "bt_glob_escape 2>&1 >/dev/null | grep -q ^Usage:"
); bt_suite_end

bt_suite_begin options; (
    bt_suite_init
    bt_test -e 0  none    eval "bt_glob_escape a >/dev/null"
    for o in -h --help; do
        bt_suite_begin -- $o; (
            bt_suite_init
            # check that stdout contains "Usage:"
            bt_test status eval "bt_glob_escape $o >/dev/null 2>&1"
            bt_test stdout \
                        eval "bt_glob_escape $o 2>/dev/null | grep -q ^Usage:"
            bt_test stderr \
                        eval "bt_glob_escape $o 2>&1 >/dev/null | { ! grep -q .; }"
        ); bt_suite_end
    done
    for o in -s --set-item; do
        bt_suite_begin -- $o; (
            bt_suite_init
            bt_test -e 0  valid     eval "bt_glob_escape $o a >/dev/null"
            bt_test -e 1  invalid   eval "bt_glob_escape $o @\( 2>/dev/null"
        ); bt_suite_end
    done
); bt_suite_end

bt_suite_begin text; (
    bt_suite_init
    at a a
    at '\' '\\'
    at '*' '\*'
    at '?' '\?'
    at '[' '\['
    at ']' '\]'
    at '@' '@'
    at '@(' '\@('
    at '+' '+'
    at '+(' '\+('
    at '!' '!'
    at '!(' '\!('
); bt_suite_end

bt_suite_begin set_item; (
    bt_suite_init
    asi a a
    asi '\\' '\\'
    asi '*' '*'
    asi '?' '?'
    asi '[' '['
    asi ']' ']'
    asi '@' '@'
    asi '!' '!'
    asi '(|)' '\(\|\)'
    asi '?()' '?()'
    asi '*()' '*()'
    asi '+()' '+()'
    asi '@()' '@()'
    asi '!()' '!()'
    asi '@((|))' '@((|))'
    asi '@(@())' '@(@())'
); bt_suite_end
