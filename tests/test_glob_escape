#!/bin/bash
#
# ep_glob_escape test suite
#
# Copyright (c) 2012-2013 Red Hat, Inc. All rights reserved.
#
# This copyrighted material is made available to anyone wishing
# to use, modify, copy, or redistribute it subject to the terms
# and conditions of the GNU General Public License version 2.

. <(ep_env || echo exit 1)
. ep.sh
ep_suite_init "$@"

function at()
{
    declare -r name="$1"
    declare -r input="$2"
    declare -r expected_output="$3"
    ep_test_begin "$name"; (
        ep_test_init
        declare -r output=`ep_glob_escape "\$input"`
        [ "$output" == "$expected_output" ]
    ); ep_test_end
}

function asi()
{
    declare -r name="$1"
    declare -r input="$2"
    declare -r expected_output="$3"
    ep_test_begin "$name"; (
        ep_test_init
        declare -r output=`ep_glob_escape --set-item "\$input"`
        [ "$output" == "$expected_output" ]
    ); ep_test_end
}

ep_suite_begin no_args; (
    ep_suite_init
    ep_test status -e 1 eval "ep_glob_escape >/dev/null 2>&1"
    ep_test stdout -e 1 \
                    eval "ep_glob_escape 2>/dev/null | { ! grep -q .; }"
    ep_test stderr -e 1 \
                    eval "ep_glob_escape 2>&1 >/dev/null | grep -q ^Usage:"
); ep_suite_end

ep_suite_begin options; (
    ep_suite_init
    ep_test none    -e 0  eval "ep_glob_escape a >/dev/null"
    for o in -h --help; do
        ep_suite_begin $o; (
            ep_suite_init
            # check that stdout contains "Usage:"
            ep_test status eval "ep_glob_escape $o >/dev/null 2>&1"
            ep_test stdout \
                        eval "ep_glob_escape $o 2>/dev/null | grep -q ^Usage:"
            ep_test stderr \
                        eval "ep_glob_escape $o 2>&1 >/dev/null | { ! grep -q .; }"
        ); ep_suite_end
    done
    for o in -s --set-item; do
        ep_suite_begin $o; (
            ep_suite_init
            ep_test valid     -e 0  eval "ep_glob_escape $o a >/dev/null"
            ep_test invalid   -e 1  eval "ep_glob_escape $o @\( 2>/dev/null"
        ); ep_suite_end
    done
); ep_suite_end

ep_suite_begin text; (
    ep_suite_init
    at letter                   a a
    at backslash                '\' '\\'
    at star                     '*' '\*'
    at question                 '?' '\?'
    at open_bracket             '[' '\['
    at close_bracket            ']' '\]'
    at at                       '@' '@'
    at at_open_paren            '@(' '\@('
    at plus                     '+' '+'
    at plus_open_paren          '+(' '\+('
    at exclamation              '!' '!'
    at exclamation_open_paren   '!(' '\!('
); ep_suite_end

ep_suite_begin set_item; (
    ep_suite_init
    asi letter              a a
    asi backslash           '\\' '\\'
    asi star                '*' '*'
    asi question            '?' '?'
    asi open_bracket        '[' '['
    asi close_bracket       ']' ']'
    asi at                  '@' '@'
    asi exclamation         '!' '!'
    asi alt_parens          '(|)' '\(\|\)'
    asi question_empty      '?()' '?()'
    asi star_empty          '*()' '*()'
    asi plus_empty          '+()' '+()'
    asi at_empty            '@()' '@()'
    asi exclamation_empty   '!()' '!()'
    asi at_alt_parens       '@((|))' '@((|))'
    asi at_at               '@(@())' '@(@())'
); ep_suite_end
